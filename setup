#!/bin/bash
#-------------------------------------------------------------------------------
# This script must be run by root on a freshly installed server.


#-------------------------------------------------------------------------------
# 1. Change root password

passwd


#-------------------------------------------------------------------------------
# 2. Change main server settings

# Set hostname.
MY_HOSTNAME=''

echo -n "Enter hostname for this server: "
read MY_HOSTNAME
echo ''

if [ ! $MY_HOSTNAME ]
then
  echo "You must specify a hostname for this server."
  exit 1
fi

echo $MY_HOSTNAME > /etc/hostname

# Set locale.
locale-gen en_US.UTF-8
/usr/sbin/update-locale LANG=en_US.UTF-8

# Set timezone.
tzconfig


#-------------------------------------------------------------------------------
# 9. Setup bash configuration files for root

cat <<EOF > ~/.bash_aliases
alias cd..='cd ..'
alias ls='ls --color=auto'
alias ll='ls -l'
alias la='ls -al'

alias free='free -m'

alias search='sudo aptitude search'
alias update='sudo aptitude update'
alias install='sudo aptitude install'
alias safe_upgrade='sudo aptitude safe-upgrade'
alias full_upgrade='sudo aptitude full-upgrade'
alias remove='sudo aptitude remove'
alias purge='sudo aptitude purge'
EOF


cat <<EOF > ~/.bashrc
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
#export HISTCONTROL=ignoredups

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" -a -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Comment in the above and uncomment this below for a color prompt
if [ which __git_ps1 > /dev/null ]
then
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]@\[\033[35m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;33m\]$(__git_ps1)\[\033[00m\]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]@\[\033[35m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
fi
EOF


#-------------------------------------------------------------------------------
# 5. Grant administrative user group sudo privileges

if [ -f "/etc/sudoers.tmp" ]; then
  exit 1
fi

touch /etc/sudoers.tmp # Lock the sudoers file.

cat <<EOF > /tmp/sudoers.new
# /etc/sudoers
#
# This file MUST be edited with the 'visudo' command as root.
#
# See the man page for details on how to write a sudoers file.
#
Defaults        env_reset

# Uncomment to allow members of group sudo to not need a password
# %sudo ALL=NOPASSWD: ALL

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root    ALL=(ALL) ALL
%admin  ALL=(ALL) ALL
EOF

visudo -c -f /tmp/sudoers.new
if [ "$?" -eq "0" ]; then
  cp /tmp/sudoers.new /etc/sudoers
fi

rm /tmp/sudoers.new
rm /etc/sudoers.tmp # Remove sudoers lock.


#-------------------------------------------------------------------------------
# 6. Setup basic IP tables

cat <<EOF > /etc/iptables.test.rules
*filter

#  Allows all loopback (lo0) traffic and drop all traffic to 127/* that doesn't use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT -i ! lo -d 127.0.0.0/8 -j REJECT

#  Accepts all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#  Allows all outbound traffic
#  You can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT

# Allow SMTP connections.
-A INPUT -p tcp --dport 25 -j ACCEPT

# Allow POP and POPS connections.
-A INPUT -p tcp --dport 110 -j ACCEPT
-A INPUT -p tcp --dport 995 -j ACCEPT

# Allow IMAP AND IMAPS connections.
-A INPUT -p tcp --dport 143 -j ACCEPT
-A INPUT -p tcp --dport 993 -j ACCEPT

# Allow HTTP and HTTPS connections from anywhere (the normal ports for websites)
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

# Allow external MySQL connections.
-A INPUT -p tcp --dport 3306 -j ACCEPT

# Allow git daemon repository requests.
-A INPUT -p tcp --dport 9418 -j ACCEPT

#  Allows SSH connections
-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT

# Allow ping
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

# Log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7

# Reject all other inbound - default deny unless explicitly allowed policy
-A INPUT -j REJECT
-A FORWARD -j REJECT

COMMIT
EOF

iptables-restore < /etc/iptables.test.rules

if [ "$?" -eq "0" ]
then
  iptables-save > /etc/iptables.up.rules
fi


#-------------------------------------------------------------------------------
# 7. Setup network adaptors to automatically restore the up rules

echo -e "\npre-up iptables-restore < /etc/iptables.up.rules" >> /etc/network/interfaces


#-------------------------------------------------------------------------------
# 3. Update server software

# Update the stuff that exists.
aptitude update
aptitude safe-upgrade
aptitude full-upgrade

# Add some core packages.
aptitude install build-essential bash-completion dnsutils


#-------------------------------------------------------------------------------
# 8. Edit the Secure Shell configuration directives.

cat <<EOF > /etc/ssh/sshd_config
# Package generated configuration file
# See the sshd(8) manpage for details

# What ports, IPs and protocols we listen for
Port 22
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 768

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin no
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
#PasswordAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding no
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

Subsystem sftp /usr/lib/openssh/sftp-server

UsePAM yes
UseDNS no

AllowGroups admin
EOF


#-------------------------------------------------------------------------------
# 4. Add administrative user

adduser admin


#-------------------------------------------------------------------------------
# 10. Restart server

reboot


 